@use 'goblin-theme/abstracts' as *
@use 'goblin-theme/base' as *

// ==========================
// --      Third party     --
// ==========================

[data-brand="itch"]
	--brand-color: hsl(359, 93%, 67%)
	--icon-shape: "/assets/brands.svg#itch-io"


[data-brand="bluesky"]
	--brand-color: hsl(206, 99%, 49%)
	--icon-shape: "/assets/brands.svg#bluesky"


[data-brand="reddit"]
	--brand-color: #FF5700
	--icon-shape: "assets/brands.svg#reddit"


[data-brand="facebook"]
	--brand-color: hsl(210, 100%, 40%)
	--icon-shape: "assets/brands.svg#facebook"

// ==========================
// --         Theme        --
// ==========================

:root // TODO: Accessibility / contrast pass on colours
	--scale-base: 1em
	--scale-ratio: 1.333


	--primary-color-darker:     hsl(153, 54%, 22%)
	--primary-color:            #{$goblin-green}
	--primary-color-lighter:    hsl(141, 100%, 93%)
	--secondary-color-darker:   hsl(307, 96%, 69%)
	--secondary-color:          #{$goblin-pink}
	--tertiary-color:           hsl(259, 48%, 41%)
	--tertiary-color-darker:    hsl(260, 71%, 21%)
	--white-color:              hsl(332, 100%, 97%)
	--black-color:              hsl(260, 96%, 10%)
	//--black-color-lighter:      hsl(260, 72%, 21%)


	--bg-color:                 var(--white-color)
	--highlight-color:          var(--tertiary-color)
	--text-color:               var(--white-color)

	--block-color-a:            var(--tertiary-color)
	--block-color-b:            var(--tertiary-color-darker)

	--glow-color:               var(--primary-color)
	--shadow-color:             var(--tertiary-color-darker)

	--gradient-lo:              var(--black-color)
	--gradient-hi:              var(--shadow-color)

	--header-color:             var(--tertiary-color)

	--emphasis-color:           var(--primary-color)


	@media screen and (prefers-color-scheme: light)
		--text-color:           black
		--gradient-hi:          hsl(142, 91%, 79%)
		--gradient-lo:          hsl(141, 100%, 93%)
		--light-showcase-bg:    #C3A9FF
		--glow-color:			hsl(254, 79%, 67%)
		--block-color-a:        white
		--block-color-b:        white
		--header-color:         unset
		--tertiary-color:		var(--gradient-hi)
		--emphasis-color:		var(--tertiary-color-darker)
		nav:has(~ header:where(body > *)),
		header:where(body > *) ~ nav,
		main section section *
			--emphasis-color:   var(--primary-color-darker)
			--secondary-color:  var(--secondary-color-darker)
		.showcase:has(h3)
			--white-color: white
			--secondary-color: #af00f1
			--secondary-color-darker: #af00f1


body
	color: var(--text-color)
	background: var(--gradient-hi)
	background: linear-gradient(var(--gradient-hi), var(--gradient-lo) 75%)


a, em, %headings
	color: var(--emphasis-color)


em:nth-child(even), a:hover
	--emphasis-color: var(--secondary-color)
	&:not(.override-hack) // HACK: Make color override have high enough specicifity to apply
		--emphasis-color: var(--secondary-color)


section, .block-emphasis, .showcase > *
	background-color: var(--block-color)


.alternating
	:nth-child(even)
		--block-color: var(--block-color-a)
		*
			--block-color: var(--block-color-b)
	:nth-child(odd)
		--block-color: var(--block-color-b)
		*
			--block-color: var(--block-color-a)


.block-emphasis
	+raised
	--block-color: var(--secondary-color-darker)
	border: 0.1rem solid var(--secondary-color)
	color: var(--white-color)
	&:has(a), &:is(a), &:not(.override-hack) // HACK: Adding a nesting seletor with a class gives specifity 0-2-0, needed to override .alternating &:nth-child from above
		--block-color: var(--secondary-color-darker)
		color: var(--white-color)


header:where(body > *) // site-wide header
	background-color: var(--header-color)

	nav:has(~&), & ~ nav // This will select a nav on *either* side of a "root" header
		background-color: var(--tertiary-color)

		li:has(a:active)
			background-color: var(--white-color)


// ===Site footer===
body > footer
	--text-color: black
	color: var(--text-color)
	background-image: url("/assets/img/slime_long 3.png")
	background-size: cover

	a
		color: var(--text-color)

	nav:not(nav:has(ul))
		border-bottom: 2px solid black

	nav:has(ul)
		> ul a
			background-color: black

		svg
			fill: hsl(157, 58%, 51%)


// ===Showcase===
.featured
	--block-color: var(--black-color)
	border: 1px solid var(--glow-color)
	box-shadow: 0 1px 8px 4px color-mix(in hsl, var(--glow-color) 25%, transparent)

.page-heading
	text-align: center



// ==========================
// -- Syntax Highlighting --
// ==========================

code
	color: #000

.highlight
	background: #fff
	@extend %vertical-rhythm

	.highlighter-rouge &
		background: #eef

	.c
		color: #998
		font-style: italic // Comment
	.err
		color: #a61717
		background-color: #e3d2d2 // Error
	.k
		font-weight: bold // Keyword
	.o
		font-weight: bold // Operator
	.cm
		color: #998
		font-style: italic // Comment.Multiline
	.cp
		color: #999
		font-weight: bold // Comment.Preproc
	.c1
		color: #998
		font-style: italic // Comment.Single
	.cs
		color: #999
		font-weight: bold
		font-style: italic // Comment.Special
	.gd
		color: #000
		background-color: #fdd // Generic.Deleted
	.gd .x
		color: #000
		background-color: #faa // Generic.Deleted.Specific
	.ge
		font-style: italic // Generic.Emph
	.gr
		color: #a00 // Generic.Error
	.gh
		color: #999 // Generic.Heading
	.gi
		color: #000
		background-color: #dfd // Generic.Inserted
	.gi .x
		color: #000
		background-color: #afa // Generic.Inserted.Specific
	.go
		color: #888 // Generic.Output
	.gp
		color: #555 // Generic.Prompt
	.gs
		font-weight: bold // Generic.Strong
	.gu
		color: #aaa // Generic.Subheading
	.gt
		color: #a00 // Generic.Traceback
	.kc
		font-weight: bold // Keyword.Constant
	.kd
		font-weight: bold // Keyword.Declaration
	.kp
		font-weight: bold // Keyword.Pseudo
	.kr
		font-weight: bold // Keyword.Reserved
	.kt
		color: #458
		font-weight: bold // Keyword.Type
	.m
		color: #099 // Literal.Number
	.s
		color: #d14 // Literal.String
	.na
		color: #008080 // Name.Attribute
	.nb
		color: #0086B3 // Name.Builtin
	.nc
		color: #458
		font-weight: bold // Name.Class
	.no
		color: #008080 // Name.Constant
	.ni
		color: #800080 // Name.Entity
	.ne
		color: #900
		font-weight: bold // Name.Exception
	.nf
		color: #900
		font-weight: bold // Name.Function
	.nn
		color: #555 // Name.Namespace
	.nt
		color: #000080 // Name.Tag
	.nv
		color: #008080 // Name.Variable
	.ow
		font-weight: bold // Operator.Word
	.w
		color: #bbb // Text.Whitespace
	.mf
		color: #099 // Literal.Number.Float
	.mh
		color: #099 // Literal.Number.Hex
	.mi
		color: #099 // Literal.Number.Integer
	.mo
		color: #099 // Literal.Number.Oct
	.sb
		color: #d14 // Literal.String.Backtick
	.sc
		color: #d14 // Literal.String.Char
	.sd
		color: #d14 // Literal.String.Doc
	.s2
		color: #d14 // Literal.String.Double
	.se
		color: #d14 // Literal.String.Escape
	.sh
		color: #d14 // Literal.String.Heredoc
	.si
		color: #d14 // Literal.String.Interpol
	.sx
		color: #d14 // Literal.String.Other
	.sr
		color: #009926 // Literal.String.Regex
	.s1
		color: #d14 // Literal.String.Single
	.ss
		color: #990073 // Literal.String.Symbol
	.bp
		color: #999 // Name.Builtin.Pseudo
	.vc
		color: #008080 // Name.Variable.Class
	.vg
		color: #008080 // Name.Variable.Global
	.vi
		color: #008080 // Name.Variable.Instance
	.il
		color: #099 // Literal.Number.Integer.Long
